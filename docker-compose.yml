version: '3.8'

services:
  backend:
      build: 
        context: ./uber-eats-backend/app
      container_name: uber_eats_backend
      volumes:
        - ./uber-eats-backend/app:/app
      environment:
        TZ: 'Asia/Tokyo'
      ports:
        - "4001:10041"
      expose:
        - "4001"
      tty: true
      networks:
        - uber_eats
      depends_on:
        - db
      restart: always
        
  backend_nginx:
      build:
        context: ./uber-eats-backend/web
      container_name: uber_eats_backend_nginx
      ports:
        - "10041:10041"
      environment:
        TZ: 'Asia/Tokyo'
      volumes:
        - ./uber-eats-backend/web/conf/default.conf:/etc/nginx/conf.d/default.conf
      networks:
        - uber_eats
      depends_on:
        - backend
      restart: always

  db:
      build:
        context: ./uber-eats-backend/db
      container_name: uber_eats_db
      ports:
        - 5432:5432
      networks:
        - uber_eats
      volumes:
        - ./uber-eats-backend/db/lib:/var/lib/postgresql/data
        - ./uber-eats-backend/db/init:/docker-entrypoint-initdb.d
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: nuber_eats
        PGDATA: /var/lib/postgresql/data/pgdata
      restart: always

  frontend:
      build: 
        context: ./uber-eats-frontend/app
      container_name: uber_eats_frontend
      volumes:
        - ./uber-eats-frontend/app/:/app/
      ports:
        - 5001:5001
      tty: true
      networks:
        - uber_eats

  frontend_nginx:
      build:
        context: ./uber-eats-frontend/web
      container_name: uber_eats_frontend_nginx
      ports:
        - "10051:10051"
      environment:
        TZ: 'Asia/Tokyo'
      volumes:
        - ./uber-eats-frontend/web/conf/default.conf:/etc/nginx/conf.d/default.conf
      networks:
        - uber_eats
      depends_on:
        - frontend
      restart: always
  
      
networks:
  uber_eats:
    name: uber_eats
    driver: bridge